name: VERSION BUMP AUTOMATION

on:
  pull_request:
    branches: [master, develop]
    types: [closed]

concurrency: ${{ github.base_ref }}-${{ github.workflow }}

jobs:
  compute-version:
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.semver.outputs.matrix }}
      branch_name: ${{ steps.branch_name.outputs.branch_name }}
      intent_file: ${{ steps.intent.outputs.intent_file }}
      intent_content: ${{ steps.intent.outputs.intent_content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Python3
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install Dependencies
        run: |
          chmod +x ./.github/intall-py-dependecies.sh
          ./.github/intall-py-dependecies.sh

      - name: Run Computer Version Script
        env:
          USER_PASSWORD: ${{ secrets.TOKEN }}
        id: semver
        run: |
          python ./.github/bump-version.py $GITHUB_HEAD_REF $GITHUB_BASE_REF $USER_PASSWORD
          echo "::set-output name=matrix::$(python ./.github/bump-version.py $GITHUB_HEAD_REF $GITHUB_BASE_REF $USER_PASSWORD)"

      - name: Get Branch Reference
        id: branch_name
        run: echo "::set-output name=branch_name::$GITHUB_BASE_REF"
        
      - name: Get Intent File Name And Content And Delete Intent File
        id: intent
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"
          git fetch --unshallow
          git checkout $GITHUB_BASE_REF
          git pull
          fileName=$(ls *intent.yml)
          fileContent=$(cat $fileName)
          echo $fileContent
          echo "::set-output name=intent_file::$fileName"
          echo "::set-output name=intent_content::$fileContent"
          rm $fileName
          git add -A
          git commit -m "delete $fileName"
          git push

  update-yaml:
    needs: compute-version
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.compute-version.outputs.matrix)}}
      fail-fast: true
      max-parallel: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Update Version on Yaml File
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: ${{ matrix.file }}
          propertyPath: info.version
          value: ${{ matrix.version }}
          commitChange: true
          updateFile: true
          targetBranch: ${{ needs.compute-version.outputs.branch_name }}
          masterBranchName: master
          createPR: false
          branch: ${{ needs.compute-version.outputs.branch_name }}
          message: Bump version to ${{ matrix.version }} in ${{ matrix.file }} \n\n Version updated by ${{ needs.compute-version.outputs.intent_file }} \n\n ${{ needs.compute-version.outputs.intent_content }}

  merge-back:
    if: github.event.pull_request.base.ref == 'master'
    needs: update-yaml
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Set Git config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"

      - name: Merge master back to dev
        run: |
          git fetch --unshallow
          git pull
          git checkout develop
          git pull
          git merge -Xours master -m "Auto-merge master back to dev"
          git push
